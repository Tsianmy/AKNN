cmake_minimum_required(VERSION 3.0.0)
project(AKNN)
cmake_policy(SET CMP0054 NEW)
set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")
find_package(OpenMP)
if(OpenMP_CXX_FOUND)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()

option(gist "search in GIST1M" OFF)
if(${gist} STREQUAL "ON")
    add_definitions(-DGIST)
endif()

option(plot "search with different qps" OFF)
if(${plot} STREQUAL "ON")
    add_definitions(-Dplot)
endif()

set(mod "base" CACHE STRING "cmake mode")
set(FAISS OFF)

if ("${mod}" STREQUAL "test_heap")
    set(SRCS test_heap.cpp)
elseif ("${mod}" STREQUAL "test_mmap")
    set(SRCS test_mmap.cpp)
elseif ("${mod}" STREQUAL "test_opq")
    set(SRCS test_opq.cpp)
    set(FAISS ON)
elseif ("${mod}" STREQUAL "test_mq1")
    set(SRCS test_mq1.cpp)
    set(FAISS ON)
elseif ("${mod}" STREQUAL "test_mq2")
    set(SRCS test_mq2.cpp)
    set(FAISS ON)
elseif ("${mod}" STREQUAL "test_mq3")
    set(SRCS test_mq3.cpp)
    set(FAISS ON)
else()
    set(SRCS base.cpp)
endif()

message("src: ${SRCS}")

aux_source_directory(../include LIBSRC)
add_library(LIB ${LIBSRC})
set_target_properties(LIB PROPERTIES PREFIX "")

set(EXECUTABLE_OUTPUT_PATH ../)
set(TARGET_NAME "${PROJECT_NAME}.exe")
add_executable(${TARGET_NAME} ${SRCS})

if (${FAISS})
    target_link_libraries(${TARGET_NAME} LIB faiss.a
        -Wl,--start-group libmkl_intel_lp64.a libmkl_gnu_thread.a libmkl_core.a
        -Wl,--end-group -lgomp -lpthread -lm -ldl)
else()
    target_link_libraries(${TARGET_NAME} LIB)
endif()

unset(mod CACHE)
unset(gist CACHE)
unset(plot CACHE)
